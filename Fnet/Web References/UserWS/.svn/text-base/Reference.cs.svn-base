//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace Fnet.UserWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="User ServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class UserService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserByPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUniqueUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminDeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLookingForListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInterestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserLookingForOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDualRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGenderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptRelationshipRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRelationIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFullnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestEstablishRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFriendListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationshipNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRelationshipIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOppositeCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRelationshipTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRelationshipWithOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserRelationshipTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInterestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLookingForOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInterestOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertFriendOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFriendStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserService() {
            this.Url = global::Fnet.Properties.Settings.Default.Fnet_UserWS_User_x0020_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserByPasswordCompletedEventHandler GetUserByPasswordCompleted;
        
        /// <remarks/>
        public event GetUserByUserNameCompletedEventHandler GetUserByUserNameCompleted;
        
        /// <remarks/>
        public event GetUserByIDCompletedEventHandler GetUserByIDCompleted;
        
        /// <remarks/>
        public event GetUserTypeByIDCompletedEventHandler GetUserTypeByIDCompleted;
        
        /// <remarks/>
        public event CheckUniqueUserNameCompletedEventHandler CheckUniqueUserNameCompleted;
        
        /// <remarks/>
        public event AdminDeleteUserCompletedEventHandler AdminDeleteUserCompleted;
        
        /// <remarks/>
        public event AdminModifyUserCompletedEventHandler AdminModifyUserCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetLookingForListCompletedEventHandler GetLookingForListCompleted;
        
        /// <remarks/>
        public event GetInterestListCompletedEventHandler GetInterestListCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event GetUserLookingForCompletedEventHandler GetUserLookingForCompleted;
        
        /// <remarks/>
        public event CheckDualRelationshipCompletedEventHandler CheckDualRelationshipCompleted;
        
        /// <remarks/>
        public event getGenderCompletedEventHandler getGenderCompleted;
        
        /// <remarks/>
        public event AcceptRelationshipRequestCompletedEventHandler AcceptRelationshipRequestCompleted;
        
        /// <remarks/>
        public event GetUserRelationIDCompletedEventHandler GetUserRelationIDCompleted;
        
        /// <remarks/>
        public event GetUserFullnameCompletedEventHandler GetUserFullnameCompleted;
        
        /// <remarks/>
        public event RequestEstablishRelationshipCompletedEventHandler RequestEstablishRelationshipCompleted;
        
        /// <remarks/>
        public event GetFriendListCompletedEventHandler GetFriendListCompleted;
        
        /// <remarks/>
        public event GetRelationshipNameCompletedEventHandler GetRelationshipNameCompleted;
        
        /// <remarks/>
        public event GetRelationshipIDCompletedEventHandler GetRelationshipIDCompleted;
        
        /// <remarks/>
        public event RequestRelationshipCompletedEventHandler RequestRelationshipCompleted;
        
        /// <remarks/>
        public event CheckRelationshipCompletedEventHandler CheckRelationshipCompleted;
        
        /// <remarks/>
        public event GetOppositeCategoryCompletedEventHandler GetOppositeCategoryCompleted;
        
        /// <remarks/>
        public event GetAllRelationshipTypeCompletedEventHandler GetAllRelationshipTypeCompleted;
        
        /// <remarks/>
        public event GetUserRelationshipWithCompletedEventHandler GetUserRelationshipWithCompleted;
        
        /// <remarks/>
        public event GetUserRelationshipTypeCompletedEventHandler GetUserRelationshipTypeCompleted;
        
        /// <remarks/>
        public event GetUsersNameCompletedEventHandler GetUsersNameCompleted;
        
        /// <remarks/>
        public event GetUserInterestCompletedEventHandler GetUserInterestCompleted;
        
        /// <remarks/>
        public event UpdateLookingForCompletedEventHandler UpdateLookingForCompleted;
        
        /// <remarks/>
        public event UpdateInterestCompletedEventHandler UpdateInterestCompleted;
        
        /// <remarks/>
        public event InsertFriendCompletedEventHandler InsertFriendCompleted;
        
        /// <remarks/>
        public event UpdateFriendStatusCompletedEventHandler UpdateFriendStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserByPassword(string userName, string password) {
            object[] results = this.Invoke("GetUserByPassword", new object[] {
                        userName,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByPasswordAsync(string userName, string password) {
            this.GetUserByPasswordAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void GetUserByPasswordAsync(string userName, string password, object userState) {
            if ((this.GetUserByPasswordOperationCompleted == null)) {
                this.GetUserByPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByPasswordOperationCompleted);
            }
            this.InvokeAsync("GetUserByPassword", new object[] {
                        userName,
                        password}, this.GetUserByPasswordOperationCompleted, userState);
        }
        
        private void OnGetUserByPasswordOperationCompleted(object arg) {
            if ((this.GetUserByPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByPasswordCompleted(this, new GetUserByPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserByUserName(string userName) {
            object[] results = this.Invoke("GetUserByUserName", new object[] {
                        userName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUserNameAsync(string userName) {
            this.GetUserByUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetUserByUserNameAsync(string userName, object userState) {
            if ((this.GetUserByUserNameOperationCompleted == null)) {
                this.GetUserByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetUserByUserName", new object[] {
                        userName}, this.GetUserByUserNameOperationCompleted, userState);
        }
        
        private void OnGetUserByUserNameOperationCompleted(object arg) {
            if ((this.GetUserByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUserNameCompleted(this, new GetUserByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public _User GetUserByID(int ID) {
            object[] results = this.Invoke("GetUserByID", new object[] {
                        ID});
            return ((_User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID) {
            this.GetUserByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int ID, object userState) {
            if ((this.GetUserByIDOperationCompleted == null)) {
                this.GetUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByID", new object[] {
                        ID}, this.GetUserByIDOperationCompleted, userState);
        }
        
        private void OnGetUserByIDOperationCompleted(object arg) {
            if ((this.GetUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTypeByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserTypeByID(int ID) {
            object[] results = this.Invoke("GetUserTypeByID", new object[] {
                        ID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeByIDAsync(int ID) {
            this.GetUserTypeByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void GetUserTypeByIDAsync(int ID, object userState) {
            if ((this.GetUserTypeByIDOperationCompleted == null)) {
                this.GetUserTypeByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeByID", new object[] {
                        ID}, this.GetUserTypeByIDOperationCompleted, userState);
        }
        
        private void OnGetUserTypeByIDOperationCompleted(object arg) {
            if ((this.GetUserTypeByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeByIDCompleted(this, new GetUserTypeByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUniqueUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUniqueUserName(string userName) {
            object[] results = this.Invoke("CheckUniqueUserName", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUniqueUserNameAsync(string userName) {
            this.CheckUniqueUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void CheckUniqueUserNameAsync(string userName, object userState) {
            if ((this.CheckUniqueUserNameOperationCompleted == null)) {
                this.CheckUniqueUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUniqueUserNameOperationCompleted);
            }
            this.InvokeAsync("CheckUniqueUserName", new object[] {
                        userName}, this.CheckUniqueUserNameOperationCompleted, userState);
        }
        
        private void OnCheckUniqueUserNameOperationCompleted(object arg) {
            if ((this.CheckUniqueUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUniqueUserNameCompleted(this, new CheckUniqueUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminDeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminDeleteUser(string username) {
            this.Invoke("AdminDeleteUser", new object[] {
                        username});
        }
        
        /// <remarks/>
        public void AdminDeleteUserAsync(string username) {
            this.AdminDeleteUserAsync(username, null);
        }
        
        /// <remarks/>
        public void AdminDeleteUserAsync(string username, object userState) {
            if ((this.AdminDeleteUserOperationCompleted == null)) {
                this.AdminDeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminDeleteUserOperationCompleted);
            }
            this.InvokeAsync("AdminDeleteUser", new object[] {
                        username}, this.AdminDeleteUserOperationCompleted, userState);
        }
        
        private void OnAdminDeleteUserOperationCompleted(object arg) {
            if ((this.AdminDeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminDeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminModifyUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminModifyUser(string userName, string firstName, string lastName, string email, string password) {
            this.Invoke("AdminModifyUser", new object[] {
                        userName,
                        firstName,
                        lastName,
                        email,
                        password});
        }
        
        /// <remarks/>
        public void AdminModifyUserAsync(string userName, string firstName, string lastName, string email, string password) {
            this.AdminModifyUserAsync(userName, firstName, lastName, email, password, null);
        }
        
        /// <remarks/>
        public void AdminModifyUserAsync(string userName, string firstName, string lastName, string email, string password, object userState) {
            if ((this.AdminModifyUserOperationCompleted == null)) {
                this.AdminModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminModifyUserOperationCompleted);
            }
            this.InvokeAsync("AdminModifyUser", new object[] {
                        userName,
                        firstName,
                        lastName,
                        email,
                        password}, this.AdminModifyUserOperationCompleted, userState);
        }
        
        private void OnAdminModifyUserOperationCompleted(object arg) {
            if ((this.AdminModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminModifyUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUser(_User user) {
            this.Invoke("AddUser", new object[] {
                        user});
        }
        
        /// <remarks/>
        public void AddUserAsync(_User user) {
            this.AddUserAsync(user, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(_User user, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        user}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLookingForList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLookingForList() {
            object[] results = this.Invoke("GetLookingForList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLookingForListAsync() {
            this.GetLookingForListAsync(null);
        }
        
        /// <remarks/>
        public void GetLookingForListAsync(object userState) {
            if ((this.GetLookingForListOperationCompleted == null)) {
                this.GetLookingForListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLookingForListOperationCompleted);
            }
            this.InvokeAsync("GetLookingForList", new object[0], this.GetLookingForListOperationCompleted, userState);
        }
        
        private void OnGetLookingForListOperationCompleted(object arg) {
            if ((this.GetLookingForListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLookingForListCompleted(this, new GetLookingForListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInterestList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInterestList() {
            object[] results = this.Invoke("GetInterestList", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInterestListAsync() {
            this.GetInterestListAsync(null);
        }
        
        /// <remarks/>
        public void GetInterestListAsync(object userState) {
            if ((this.GetInterestListOperationCompleted == null)) {
                this.GetInterestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInterestListOperationCompleted);
            }
            this.InvokeAsync("GetInterestList", new object[0], this.GetInterestListOperationCompleted, userState);
        }
        
        private void OnGetInterestListOperationCompleted(object arg) {
            if ((this.GetInterestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInterestListCompleted(this, new GetInterestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUser(_User user) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(_User user) {
            this.UpdateUserAsync(user, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(_User user, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        user}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserLookingFor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserLookingFor(int userID) {
            object[] results = this.Invoke("GetUserLookingFor", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserLookingForAsync(int userID) {
            this.GetUserLookingForAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserLookingForAsync(int userID, object userState) {
            if ((this.GetUserLookingForOperationCompleted == null)) {
                this.GetUserLookingForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserLookingForOperationCompleted);
            }
            this.InvokeAsync("GetUserLookingFor", new object[] {
                        userID}, this.GetUserLookingForOperationCompleted, userState);
        }
        
        private void OnGetUserLookingForOperationCompleted(object arg) {
            if ((this.GetUserLookingForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserLookingForCompleted(this, new GetUserLookingForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDualRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDualRelationship(int RequestUserID, int RespondUserID, int RelationshipTypeID) {
            object[] results = this.Invoke("CheckDualRelationship", new object[] {
                        RequestUserID,
                        RespondUserID,
                        RelationshipTypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDualRelationshipAsync(int RequestUserID, int RespondUserID, int RelationshipTypeID) {
            this.CheckDualRelationshipAsync(RequestUserID, RespondUserID, RelationshipTypeID, null);
        }
        
        /// <remarks/>
        public void CheckDualRelationshipAsync(int RequestUserID, int RespondUserID, int RelationshipTypeID, object userState) {
            if ((this.CheckDualRelationshipOperationCompleted == null)) {
                this.CheckDualRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDualRelationshipOperationCompleted);
            }
            this.InvokeAsync("CheckDualRelationship", new object[] {
                        RequestUserID,
                        RespondUserID,
                        RelationshipTypeID}, this.CheckDualRelationshipOperationCompleted, userState);
        }
        
        private void OnCheckDualRelationshipOperationCompleted(object arg) {
            if ((this.CheckDualRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDualRelationshipCompleted(this, new CheckDualRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGender", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getGender(int userID) {
            object[] results = this.Invoke("getGender", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getGenderAsync(int userID) {
            this.getGenderAsync(userID, null);
        }
        
        /// <remarks/>
        public void getGenderAsync(int userID, object userState) {
            if ((this.getGenderOperationCompleted == null)) {
                this.getGenderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGenderOperationCompleted);
            }
            this.InvokeAsync("getGender", new object[] {
                        userID}, this.getGenderOperationCompleted, userState);
        }
        
        private void OngetGenderOperationCompleted(object arg) {
            if ((this.getGenderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGenderCompleted(this, new getGenderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AcceptRelationshipRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AcceptRelationshipRequest(int relationshipType, int relationID, int responder) {
            object[] results = this.Invoke("AcceptRelationshipRequest", new object[] {
                        relationshipType,
                        relationID,
                        responder});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptRelationshipRequestAsync(int relationshipType, int relationID, int responder) {
            this.AcceptRelationshipRequestAsync(relationshipType, relationID, responder, null);
        }
        
        /// <remarks/>
        public void AcceptRelationshipRequestAsync(int relationshipType, int relationID, int responder, object userState) {
            if ((this.AcceptRelationshipRequestOperationCompleted == null)) {
                this.AcceptRelationshipRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptRelationshipRequestOperationCompleted);
            }
            this.InvokeAsync("AcceptRelationshipRequest", new object[] {
                        relationshipType,
                        relationID,
                        responder}, this.AcceptRelationshipRequestOperationCompleted, userState);
        }
        
        private void OnAcceptRelationshipRequestOperationCompleted(object arg) {
            if ((this.AcceptRelationshipRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptRelationshipRequestCompleted(this, new AcceptRelationshipRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRelationID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserRelationID(int RequestID, int RespondID, int RelationTypeID) {
            object[] results = this.Invoke("GetUserRelationID", new object[] {
                        RequestID,
                        RespondID,
                        RelationTypeID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRelationIDAsync(int RequestID, int RespondID, int RelationTypeID) {
            this.GetUserRelationIDAsync(RequestID, RespondID, RelationTypeID, null);
        }
        
        /// <remarks/>
        public void GetUserRelationIDAsync(int RequestID, int RespondID, int RelationTypeID, object userState) {
            if ((this.GetUserRelationIDOperationCompleted == null)) {
                this.GetUserRelationIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRelationIDOperationCompleted);
            }
            this.InvokeAsync("GetUserRelationID", new object[] {
                        RequestID,
                        RespondID,
                        RelationTypeID}, this.GetUserRelationIDOperationCompleted, userState);
        }
        
        private void OnGetUserRelationIDOperationCompleted(object arg) {
            if ((this.GetUserRelationIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRelationIDCompleted(this, new GetUserRelationIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserFullname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserFullname(int userID) {
            object[] results = this.Invoke("GetUserFullname", new object[] {
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFullnameAsync(int userID) {
            this.GetUserFullnameAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserFullnameAsync(int userID, object userState) {
            if ((this.GetUserFullnameOperationCompleted == null)) {
                this.GetUserFullnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFullnameOperationCompleted);
            }
            this.InvokeAsync("GetUserFullname", new object[] {
                        userID}, this.GetUserFullnameOperationCompleted, userState);
        }
        
        private void OnGetUserFullnameOperationCompleted(object arg) {
            if ((this.GetUserFullnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFullnameCompleted(this, new GetUserFullnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestEstablishRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestEstablishRelationship(int userID, int RUserID, int RelationshipTypeID) {
            object[] results = this.Invoke("RequestEstablishRelationship", new object[] {
                        userID,
                        RUserID,
                        RelationshipTypeID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestEstablishRelationshipAsync(int userID, int RUserID, int RelationshipTypeID) {
            this.RequestEstablishRelationshipAsync(userID, RUserID, RelationshipTypeID, null);
        }
        
        /// <remarks/>
        public void RequestEstablishRelationshipAsync(int userID, int RUserID, int RelationshipTypeID, object userState) {
            if ((this.RequestEstablishRelationshipOperationCompleted == null)) {
                this.RequestEstablishRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestEstablishRelationshipOperationCompleted);
            }
            this.InvokeAsync("RequestEstablishRelationship", new object[] {
                        userID,
                        RUserID,
                        RelationshipTypeID}, this.RequestEstablishRelationshipOperationCompleted, userState);
        }
        
        private void OnRequestEstablishRelationshipOperationCompleted(object arg) {
            if ((this.RequestEstablishRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestEstablishRelationshipCompleted(this, new RequestEstablishRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFriendList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFriendList(int userID) {
            object[] results = this.Invoke("GetFriendList", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFriendListAsync(int userID) {
            this.GetFriendListAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetFriendListAsync(int userID, object userState) {
            if ((this.GetFriendListOperationCompleted == null)) {
                this.GetFriendListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFriendListOperationCompleted);
            }
            this.InvokeAsync("GetFriendList", new object[] {
                        userID}, this.GetFriendListOperationCompleted, userState);
        }
        
        private void OnGetFriendListOperationCompleted(object arg) {
            if ((this.GetFriendListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFriendListCompleted(this, new GetFriendListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelationshipName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRelationshipName(int RelationshipID) {
            object[] results = this.Invoke("GetRelationshipName", new object[] {
                        RelationshipID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationshipNameAsync(int RelationshipID) {
            this.GetRelationshipNameAsync(RelationshipID, null);
        }
        
        /// <remarks/>
        public void GetRelationshipNameAsync(int RelationshipID, object userState) {
            if ((this.GetRelationshipNameOperationCompleted == null)) {
                this.GetRelationshipNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationshipNameOperationCompleted);
            }
            this.InvokeAsync("GetRelationshipName", new object[] {
                        RelationshipID}, this.GetRelationshipNameOperationCompleted, userState);
        }
        
        private void OnGetRelationshipNameOperationCompleted(object arg) {
            if ((this.GetRelationshipNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationshipNameCompleted(this, new GetRelationshipNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRelationshipID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRelationshipID(string RelationshipName) {
            object[] results = this.Invoke("GetRelationshipID", new object[] {
                        RelationshipName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRelationshipIDAsync(string RelationshipName) {
            this.GetRelationshipIDAsync(RelationshipName, null);
        }
        
        /// <remarks/>
        public void GetRelationshipIDAsync(string RelationshipName, object userState) {
            if ((this.GetRelationshipIDOperationCompleted == null)) {
                this.GetRelationshipIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRelationshipIDOperationCompleted);
            }
            this.InvokeAsync("GetRelationshipID", new object[] {
                        RelationshipName}, this.GetRelationshipIDOperationCompleted, userState);
        }
        
        private void OnGetRelationshipIDOperationCompleted(object arg) {
            if ((this.GetRelationshipIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRelationshipIDCompleted(this, new GetRelationshipIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RequestRelationship(int RequestUserID, int RespondUserID, string Relationship_Name) {
            object[] results = this.Invoke("RequestRelationship", new object[] {
                        RequestUserID,
                        RespondUserID,
                        Relationship_Name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RequestRelationshipAsync(int RequestUserID, int RespondUserID, string Relationship_Name) {
            this.RequestRelationshipAsync(RequestUserID, RespondUserID, Relationship_Name, null);
        }
        
        /// <remarks/>
        public void RequestRelationshipAsync(int RequestUserID, int RespondUserID, string Relationship_Name, object userState) {
            if ((this.RequestRelationshipOperationCompleted == null)) {
                this.RequestRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestRelationshipOperationCompleted);
            }
            this.InvokeAsync("RequestRelationship", new object[] {
                        RequestUserID,
                        RespondUserID,
                        Relationship_Name}, this.RequestRelationshipOperationCompleted, userState);
        }
        
        private void OnRequestRelationshipOperationCompleted(object arg) {
            if ((this.RequestRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestRelationshipCompleted(this, new RequestRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckRelationship(int UserID) {
            object[] results = this.Invoke("CheckRelationship", new object[] {
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRelationshipAsync(int UserID) {
            this.CheckRelationshipAsync(UserID, null);
        }
        
        /// <remarks/>
        public void CheckRelationshipAsync(int UserID, object userState) {
            if ((this.CheckRelationshipOperationCompleted == null)) {
                this.CheckRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRelationshipOperationCompleted);
            }
            this.InvokeAsync("CheckRelationship", new object[] {
                        UserID}, this.CheckRelationshipOperationCompleted, userState);
        }
        
        private void OnCheckRelationshipOperationCompleted(object arg) {
            if ((this.CheckRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRelationshipCompleted(this, new CheckRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOppositeCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOppositeCategory(string catName, string genderName) {
            object[] results = this.Invoke("GetOppositeCategory", new object[] {
                        catName,
                        genderName});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOppositeCategoryAsync(string catName, string genderName) {
            this.GetOppositeCategoryAsync(catName, genderName, null);
        }
        
        /// <remarks/>
        public void GetOppositeCategoryAsync(string catName, string genderName, object userState) {
            if ((this.GetOppositeCategoryOperationCompleted == null)) {
                this.GetOppositeCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOppositeCategoryOperationCompleted);
            }
            this.InvokeAsync("GetOppositeCategory", new object[] {
                        catName,
                        genderName}, this.GetOppositeCategoryOperationCompleted, userState);
        }
        
        private void OnGetOppositeCategoryOperationCompleted(object arg) {
            if ((this.GetOppositeCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOppositeCategoryCompleted(this, new GetOppositeCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRelationshipType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllRelationshipType() {
            object[] results = this.Invoke("GetAllRelationshipType", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRelationshipTypeAsync() {
            this.GetAllRelationshipTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetAllRelationshipTypeAsync(object userState) {
            if ((this.GetAllRelationshipTypeOperationCompleted == null)) {
                this.GetAllRelationshipTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRelationshipTypeOperationCompleted);
            }
            this.InvokeAsync("GetAllRelationshipType", new object[0], this.GetAllRelationshipTypeOperationCompleted, userState);
        }
        
        private void OnGetAllRelationshipTypeOperationCompleted(object arg) {
            if ((this.GetAllRelationshipTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRelationshipTypeCompleted(this, new GetAllRelationshipTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRelationshipWith", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserRelationshipWith(int userID) {
            object[] results = this.Invoke("GetUserRelationshipWith", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRelationshipWithAsync(int userID) {
            this.GetUserRelationshipWithAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserRelationshipWithAsync(int userID, object userState) {
            if ((this.GetUserRelationshipWithOperationCompleted == null)) {
                this.GetUserRelationshipWithOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRelationshipWithOperationCompleted);
            }
            this.InvokeAsync("GetUserRelationshipWith", new object[] {
                        userID}, this.GetUserRelationshipWithOperationCompleted, userState);
        }
        
        private void OnGetUserRelationshipWithOperationCompleted(object arg) {
            if ((this.GetUserRelationshipWithCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRelationshipWithCompleted(this, new GetUserRelationshipWithCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRelationshipType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserRelationshipType(int relationshipID) {
            object[] results = this.Invoke("GetUserRelationshipType", new object[] {
                        relationshipID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserRelationshipTypeAsync(int relationshipID) {
            this.GetUserRelationshipTypeAsync(relationshipID, null);
        }
        
        /// <remarks/>
        public void GetUserRelationshipTypeAsync(int relationshipID, object userState) {
            if ((this.GetUserRelationshipTypeOperationCompleted == null)) {
                this.GetUserRelationshipTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserRelationshipTypeOperationCompleted);
            }
            this.InvokeAsync("GetUserRelationshipType", new object[] {
                        relationshipID}, this.GetUserRelationshipTypeOperationCompleted, userState);
        }
        
        private void OnGetUserRelationshipTypeOperationCompleted(object arg) {
            if ((this.GetUserRelationshipTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserRelationshipTypeCompleted(this, new GetUserRelationshipTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUsersName(int userID) {
            object[] results = this.Invoke("GetUsersName", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersNameAsync(int userID) {
            this.GetUsersNameAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUsersNameAsync(int userID, object userState) {
            if ((this.GetUsersNameOperationCompleted == null)) {
                this.GetUsersNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersNameOperationCompleted);
            }
            this.InvokeAsync("GetUsersName", new object[] {
                        userID}, this.GetUsersNameOperationCompleted, userState);
        }
        
        private void OnGetUsersNameOperationCompleted(object arg) {
            if ((this.GetUsersNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersNameCompleted(this, new GetUsersNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInterest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserInterest(int userID) {
            object[] results = this.Invoke("GetUserInterest", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInterestAsync(int userID) {
            this.GetUserInterestAsync(userID, null);
        }
        
        /// <remarks/>
        public void GetUserInterestAsync(int userID, object userState) {
            if ((this.GetUserInterestOperationCompleted == null)) {
                this.GetUserInterestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInterestOperationCompleted);
            }
            this.InvokeAsync("GetUserInterest", new object[] {
                        userID}, this.GetUserInterestOperationCompleted, userState);
        }
        
        private void OnGetUserInterestOperationCompleted(object arg) {
            if ((this.GetUserInterestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInterestCompleted(this, new GetUserInterestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLookingFor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateLookingFor(int userID, object[] lookingForList) {
            this.Invoke("UpdateLookingFor", new object[] {
                        userID,
                        lookingForList});
        }
        
        /// <remarks/>
        public void UpdateLookingForAsync(int userID, object[] lookingForList) {
            this.UpdateLookingForAsync(userID, lookingForList, null);
        }
        
        /// <remarks/>
        public void UpdateLookingForAsync(int userID, object[] lookingForList, object userState) {
            if ((this.UpdateLookingForOperationCompleted == null)) {
                this.UpdateLookingForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLookingForOperationCompleted);
            }
            this.InvokeAsync("UpdateLookingFor", new object[] {
                        userID,
                        lookingForList}, this.UpdateLookingForOperationCompleted, userState);
        }
        
        private void OnUpdateLookingForOperationCompleted(object arg) {
            if ((this.UpdateLookingForCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLookingForCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInterest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInterest(int userID, object[] interestList) {
            this.Invoke("UpdateInterest", new object[] {
                        userID,
                        interestList});
        }
        
        /// <remarks/>
        public void UpdateInterestAsync(int userID, object[] interestList) {
            this.UpdateInterestAsync(userID, interestList, null);
        }
        
        /// <remarks/>
        public void UpdateInterestAsync(int userID, object[] interestList, object userState) {
            if ((this.UpdateInterestOperationCompleted == null)) {
                this.UpdateInterestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInterestOperationCompleted);
            }
            this.InvokeAsync("UpdateInterest", new object[] {
                        userID,
                        interestList}, this.UpdateInterestOperationCompleted, userState);
        }
        
        private void OnUpdateInterestOperationCompleted(object arg) {
            if ((this.UpdateInterestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInterestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFriend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertFriend(int userID, int friendID) {
            this.Invoke("InsertFriend", new object[] {
                        userID,
                        friendID});
        }
        
        /// <remarks/>
        public void InsertFriendAsync(int userID, int friendID) {
            this.InsertFriendAsync(userID, friendID, null);
        }
        
        /// <remarks/>
        public void InsertFriendAsync(int userID, int friendID, object userState) {
            if ((this.InsertFriendOperationCompleted == null)) {
                this.InsertFriendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertFriendOperationCompleted);
            }
            this.InvokeAsync("InsertFriend", new object[] {
                        userID,
                        friendID}, this.InsertFriendOperationCompleted, userState);
        }
        
        private void OnInsertFriendOperationCompleted(object arg) {
            if ((this.InsertFriendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertFriendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFriendStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFriendStatus(int requestID, int respondID) {
            this.Invoke("UpdateFriendStatus", new object[] {
                        requestID,
                        respondID});
        }
        
        /// <remarks/>
        public void UpdateFriendStatusAsync(int requestID, int respondID) {
            this.UpdateFriendStatusAsync(requestID, respondID, null);
        }
        
        /// <remarks/>
        public void UpdateFriendStatusAsync(int requestID, int respondID, object userState) {
            if ((this.UpdateFriendStatusOperationCompleted == null)) {
                this.UpdateFriendStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFriendStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateFriendStatus", new object[] {
                        requestID,
                        respondID}, this.UpdateFriendStatusOperationCompleted, userState);
        }
        
        private void OnUpdateFriendStatusOperationCompleted(object arg) {
            if ((this.UpdateFriendStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFriendStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class _User {
        
        private int userIDField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string addressField;
        
        private string suburbField;
        
        private string stateField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private System.DateTime dobField;
        
        private System.DateTime createdDateField;
        
        private System.DateTime modifiedDateField;
        
        private int userTypeIDField;
        
        private int statusField;
        
        private string genderField;
        
        private int lookingForField;
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Dob {
            get {
                return this.dobField;
            }
            set {
                this.dobField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int UserTypeID {
            get {
                return this.userTypeIDField;
            }
            set {
                this.userTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public int LookingFor {
            get {
                return this.lookingForField;
            }
            set {
                this.lookingForField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserByPasswordCompletedEventHandler(object sender, GetUserByPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserByUserNameCompletedEventHandler(object sender, GetUserByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserByIDCompletedEventHandler(object sender, GetUserByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public _User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((_User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserTypeByIDCompletedEventHandler(object sender, GetUserTypeByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckUniqueUserNameCompletedEventHandler(object sender, CheckUniqueUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUniqueUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUniqueUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdminDeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdminModifyUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLookingForListCompletedEventHandler(object sender, GetLookingForListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLookingForListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLookingForListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetInterestListCompletedEventHandler(object sender, GetInterestListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInterestListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInterestListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserLookingForCompletedEventHandler(object sender, GetUserLookingForCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserLookingForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserLookingForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckDualRelationshipCompletedEventHandler(object sender, CheckDualRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDualRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDualRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getGenderCompletedEventHandler(object sender, getGenderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGenderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGenderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AcceptRelationshipRequestCompletedEventHandler(object sender, AcceptRelationshipRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptRelationshipRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptRelationshipRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserRelationIDCompletedEventHandler(object sender, GetUserRelationIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRelationIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRelationIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserFullnameCompletedEventHandler(object sender, GetUserFullnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFullnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFullnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RequestEstablishRelationshipCompletedEventHandler(object sender, RequestEstablishRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestEstablishRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestEstablishRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFriendListCompletedEventHandler(object sender, GetFriendListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFriendListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFriendListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRelationshipNameCompletedEventHandler(object sender, GetRelationshipNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationshipNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationshipNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRelationshipIDCompletedEventHandler(object sender, GetRelationshipIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRelationshipIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRelationshipIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RequestRelationshipCompletedEventHandler(object sender, RequestRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CheckRelationshipCompletedEventHandler(object sender, CheckRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetOppositeCategoryCompletedEventHandler(object sender, GetOppositeCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOppositeCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOppositeCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllRelationshipTypeCompletedEventHandler(object sender, GetAllRelationshipTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRelationshipTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRelationshipTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserRelationshipWithCompletedEventHandler(object sender, GetUserRelationshipWithCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRelationshipWithCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRelationshipWithCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserRelationshipTypeCompletedEventHandler(object sender, GetUserRelationshipTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserRelationshipTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserRelationshipTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUsersNameCompletedEventHandler(object sender, GetUsersNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserInterestCompletedEventHandler(object sender, GetUserInterestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInterestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInterestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateLookingForCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateInterestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertFriendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateFriendStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591