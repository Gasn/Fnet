//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace Fnet.GroupWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GroupServiceSoap", Namespace="http://tempuri.org/")]
    public partial class GroupService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateGroupDefaultCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewGroupTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGroupNewCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatDetailsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserFromGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGroupDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBoardContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveBoardContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupAuthorisationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoardTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupOwnerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupMembersByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingGroupMembersOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupMemeberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupMemeberStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupModeratorOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupMemberTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonMemberByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiscussionBoardContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGroupMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBoardContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBoardContentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GroupService() {
            this.Url = global::Fnet.Properties.Settings.Default.Fnet_GroupWS_GroupService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateGroupDefaultCatCompletedEventHandler CreateGroupDefaultCatCompleted;
        
        /// <remarks/>
        public event CreateNewGroupTopicCompletedEventHandler CreateNewGroupTopicCompleted;
        
        /// <remarks/>
        public event CreateGroupNewCatCompletedEventHandler CreateGroupNewCatCompleted;
        
        /// <remarks/>
        public event UserGroupOwnerCompletedEventHandler UserGroupOwnerCompleted;
        
        /// <remarks/>
        public event UserGroupMemberCompletedEventHandler UserGroupMemberCompleted;
        
        /// <remarks/>
        public event GetGroupDetailsCompletedEventHandler GetGroupDetailsCompleted;
        
        /// <remarks/>
        public event GetCatDetailsCompletedEventHandler GetCatDetailsCompleted;
        
        /// <remarks/>
        public event GetCatDetailsByIDCompletedEventHandler GetCatDetailsByIDCompleted;
        
        /// <remarks/>
        public event deleteUserFromGroupCompletedEventHandler deleteUserFromGroupCompleted;
        
        /// <remarks/>
        public event deleteGroupCompletedEventHandler deleteGroupCompleted;
        
        /// <remarks/>
        public event updateGroupDetailsCompletedEventHandler updateGroupDetailsCompleted;
        
        /// <remarks/>
        public event UpdateBoardContentCompletedEventHandler UpdateBoardContentCompleted;
        
        /// <remarks/>
        public event RetrieveBoardContentCompletedEventHandler RetrieveBoardContentCompleted;
        
        /// <remarks/>
        public event GetUserTypeIDCompletedEventHandler GetUserTypeIDCompleted;
        
        /// <remarks/>
        public event GetGroupAuthorisationCompletedEventHandler GetGroupAuthorisationCompleted;
        
        /// <remarks/>
        public event GetUserTypeCompletedEventHandler GetUserTypeCompleted;
        
        /// <remarks/>
        public event GetBoardTopicsCompletedEventHandler GetBoardTopicsCompleted;
        
        /// <remarks/>
        public event GetGroupOwnerDetailsCompletedEventHandler GetGroupOwnerDetailsCompleted;
        
        /// <remarks/>
        public event GetGroupMembersCompletedEventHandler GetGroupMembersCompleted;
        
        /// <remarks/>
        public event GetGroupMembersByNameCompletedEventHandler GetGroupMembersByNameCompleted;
        
        /// <remarks/>
        public event GetPendingGroupMembersCompletedEventHandler GetPendingGroupMembersCompleted;
        
        /// <remarks/>
        public event UpdateGroupMemeberCompletedEventHandler UpdateGroupMemeberCompleted;
        
        /// <remarks/>
        public event UpdateGroupMemeberStatusCompletedEventHandler UpdateGroupMemeberStatusCompleted;
        
        /// <remarks/>
        public event GetGroupModeratorCompletedEventHandler GetGroupModeratorCompleted;
        
        /// <remarks/>
        public event UpdateGroupMemberTypeCompletedEventHandler UpdateGroupMemberTypeCompleted;
        
        /// <remarks/>
        public event GetNonMemberByNameCompletedEventHandler GetNonMemberByNameCompleted;
        
        /// <remarks/>
        public event GetDiscussionBoardContentCompletedEventHandler GetDiscussionBoardContentCompleted;
        
        /// <remarks/>
        public event InsertGroupMemberCompletedEventHandler InsertGroupMemberCompleted;
        
        /// <remarks/>
        public event InsertBoardContentCompletedEventHandler InsertBoardContentCompleted;
        
        /// <remarks/>
        public event DeleteBoardContentCompletedEventHandler DeleteBoardContentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGroupDefaultCat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateGroupDefaultCat(string userID, string grpName, string grpCatID, string grpDesc, string grpType, System.DateTime createdDate, string fileSize) {
            object[] results = this.Invoke("CreateGroupDefaultCat", new object[] {
                        userID,
                        grpName,
                        grpCatID,
                        grpDesc,
                        grpType,
                        createdDate,
                        fileSize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGroupDefaultCatAsync(string userID, string grpName, string grpCatID, string grpDesc, string grpType, System.DateTime createdDate, string fileSize) {
            this.CreateGroupDefaultCatAsync(userID, grpName, grpCatID, grpDesc, grpType, createdDate, fileSize, null);
        }
        
        /// <remarks/>
        public void CreateGroupDefaultCatAsync(string userID, string grpName, string grpCatID, string grpDesc, string grpType, System.DateTime createdDate, string fileSize, object userState) {
            if ((this.CreateGroupDefaultCatOperationCompleted == null)) {
                this.CreateGroupDefaultCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupDefaultCatOperationCompleted);
            }
            this.InvokeAsync("CreateGroupDefaultCat", new object[] {
                        userID,
                        grpName,
                        grpCatID,
                        grpDesc,
                        grpType,
                        createdDate,
                        fileSize}, this.CreateGroupDefaultCatOperationCompleted, userState);
        }
        
        private void OnCreateGroupDefaultCatOperationCompleted(object arg) {
            if ((this.CreateGroupDefaultCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupDefaultCatCompleted(this, new CreateGroupDefaultCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewGroupTopic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateNewGroupTopic(string groupID, string userID, string topicName, System.DateTime createdDate) {
            object[] results = this.Invoke("CreateNewGroupTopic", new object[] {
                        groupID,
                        userID,
                        topicName,
                        createdDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewGroupTopicAsync(string groupID, string userID, string topicName, System.DateTime createdDate) {
            this.CreateNewGroupTopicAsync(groupID, userID, topicName, createdDate, null);
        }
        
        /// <remarks/>
        public void CreateNewGroupTopicAsync(string groupID, string userID, string topicName, System.DateTime createdDate, object userState) {
            if ((this.CreateNewGroupTopicOperationCompleted == null)) {
                this.CreateNewGroupTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewGroupTopicOperationCompleted);
            }
            this.InvokeAsync("CreateNewGroupTopic", new object[] {
                        groupID,
                        userID,
                        topicName,
                        createdDate}, this.CreateNewGroupTopicOperationCompleted, userState);
        }
        
        private void OnCreateNewGroupTopicOperationCompleted(object arg) {
            if ((this.CreateNewGroupTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewGroupTopicCompleted(this, new CreateNewGroupTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGroupNewCat", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateGroupNewCat(string catName, string catDesc, string userID, string grpName, string grpDesc, string grpType, System.DateTime createdDate, string fileSize) {
            object[] results = this.Invoke("CreateGroupNewCat", new object[] {
                        catName,
                        catDesc,
                        userID,
                        grpName,
                        grpDesc,
                        grpType,
                        createdDate,
                        fileSize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGroupNewCatAsync(string catName, string catDesc, string userID, string grpName, string grpDesc, string grpType, System.DateTime createdDate, string fileSize) {
            this.CreateGroupNewCatAsync(catName, catDesc, userID, grpName, grpDesc, grpType, createdDate, fileSize, null);
        }
        
        /// <remarks/>
        public void CreateGroupNewCatAsync(string catName, string catDesc, string userID, string grpName, string grpDesc, string grpType, System.DateTime createdDate, string fileSize, object userState) {
            if ((this.CreateGroupNewCatOperationCompleted == null)) {
                this.CreateGroupNewCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupNewCatOperationCompleted);
            }
            this.InvokeAsync("CreateGroupNewCat", new object[] {
                        catName,
                        catDesc,
                        userID,
                        grpName,
                        grpDesc,
                        grpType,
                        createdDate,
                        fileSize}, this.CreateGroupNewCatOperationCompleted, userState);
        }
        
        private void OnCreateGroupNewCatOperationCompleted(object arg) {
            if ((this.CreateGroupNewCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupNewCatCompleted(this, new CreateGroupNewCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupOwner", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UserGroupOwner(string userID) {
            object[] results = this.Invoke("UserGroupOwner", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupOwnerAsync(string userID) {
            this.UserGroupOwnerAsync(userID, null);
        }
        
        /// <remarks/>
        public void UserGroupOwnerAsync(string userID, object userState) {
            if ((this.UserGroupOwnerOperationCompleted == null)) {
                this.UserGroupOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupOwnerOperationCompleted);
            }
            this.InvokeAsync("UserGroupOwner", new object[] {
                        userID}, this.UserGroupOwnerOperationCompleted, userState);
        }
        
        private void OnUserGroupOwnerOperationCompleted(object arg) {
            if ((this.UserGroupOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupOwnerCompleted(this, new UserGroupOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable UserGroupMember(string userID) {
            object[] results = this.Invoke("UserGroupMember", new object[] {
                        userID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupMemberAsync(string userID) {
            this.UserGroupMemberAsync(userID, null);
        }
        
        /// <remarks/>
        public void UserGroupMemberAsync(string userID, object userState) {
            if ((this.UserGroupMemberOperationCompleted == null)) {
                this.UserGroupMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupMemberOperationCompleted);
            }
            this.InvokeAsync("UserGroupMember", new object[] {
                        userID}, this.UserGroupMemberOperationCompleted, userState);
        }
        
        private void OnUserGroupMemberOperationCompleted(object arg) {
            if ((this.UserGroupMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupMemberCompleted(this, new UserGroupMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GetGroupDetails(string groupID) {
            object[] results = this.Invoke("GetGroupDetails", new object[] {
                        groupID});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupDetailsAsync(string groupID) {
            this.GetGroupDetailsAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetGroupDetailsAsync(string groupID, object userState) {
            if ((this.GetGroupDetailsOperationCompleted == null)) {
                this.GetGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("GetGroupDetails", new object[] {
                        groupID}, this.GetGroupDetailsOperationCompleted, userState);
        }
        
        private void OnGetGroupDetailsOperationCompleted(object arg) {
            if ((this.GetGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupDetailsCompleted(this, new GetGroupDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCatDetails() {
            object[] results = this.Invoke("GetCatDetails", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatDetailsAsync() {
            this.GetCatDetailsAsync(null);
        }
        
        /// <remarks/>
        public void GetCatDetailsAsync(object userState) {
            if ((this.GetCatDetailsOperationCompleted == null)) {
                this.GetCatDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCatDetails", new object[0], this.GetCatDetailsOperationCompleted, userState);
        }
        
        private void OnGetCatDetailsOperationCompleted(object arg) {
            if ((this.GetCatDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatDetailsCompleted(this, new GetCatDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCatDetailsByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCatDetailsByID(int catID) {
            object[] results = this.Invoke("GetCatDetailsByID", new object[] {
                        catID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatDetailsByIDAsync(int catID) {
            this.GetCatDetailsByIDAsync(catID, null);
        }
        
        /// <remarks/>
        public void GetCatDetailsByIDAsync(int catID, object userState) {
            if ((this.GetCatDetailsByIDOperationCompleted == null)) {
                this.GetCatDetailsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatDetailsByIDOperationCompleted);
            }
            this.InvokeAsync("GetCatDetailsByID", new object[] {
                        catID}, this.GetCatDetailsByIDOperationCompleted, userState);
        }
        
        private void OnGetCatDetailsByIDOperationCompleted(object arg) {
            if ((this.GetCatDetailsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatDetailsByIDCompleted(this, new GetCatDetailsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteUserFromGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUserFromGroup(string userID, string grpID) {
            this.Invoke("deleteUserFromGroup", new object[] {
                        userID,
                        grpID});
        }
        
        /// <remarks/>
        public void deleteUserFromGroupAsync(string userID, string grpID) {
            this.deleteUserFromGroupAsync(userID, grpID, null);
        }
        
        /// <remarks/>
        public void deleteUserFromGroupAsync(string userID, string grpID, object userState) {
            if ((this.deleteUserFromGroupOperationCompleted == null)) {
                this.deleteUserFromGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserFromGroupOperationCompleted);
            }
            this.InvokeAsync("deleteUserFromGroup", new object[] {
                        userID,
                        grpID}, this.deleteUserFromGroupOperationCompleted, userState);
        }
        
        private void OndeleteUserFromGroupOperationCompleted(object arg) {
            if ((this.deleteUserFromGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserFromGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteGroup(string grpID) {
            this.Invoke("deleteGroup", new object[] {
                        grpID});
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string grpID) {
            this.deleteGroupAsync(grpID, null);
        }
        
        /// <remarks/>
        public void deleteGroupAsync(string grpID, object userState) {
            if ((this.deleteGroupOperationCompleted == null)) {
                this.deleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGroupOperationCompleted);
            }
            this.InvokeAsync("deleteGroup", new object[] {
                        grpID}, this.deleteGroupOperationCompleted, userState);
        }
        
        private void OndeleteGroupOperationCompleted(object arg) {
            if ((this.deleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGroupDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateGroupDetails(string grpID, string grpName, string grpDesc) {
            this.Invoke("updateGroupDetails", new object[] {
                        grpID,
                        grpName,
                        grpDesc});
        }
        
        /// <remarks/>
        public void updateGroupDetailsAsync(string grpID, string grpName, string grpDesc) {
            this.updateGroupDetailsAsync(grpID, grpName, grpDesc, null);
        }
        
        /// <remarks/>
        public void updateGroupDetailsAsync(string grpID, string grpName, string grpDesc, object userState) {
            if ((this.updateGroupDetailsOperationCompleted == null)) {
                this.updateGroupDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGroupDetailsOperationCompleted);
            }
            this.InvokeAsync("updateGroupDetails", new object[] {
                        grpID,
                        grpName,
                        grpDesc}, this.updateGroupDetailsOperationCompleted, userState);
        }
        
        private void OnupdateGroupDetailsOperationCompleted(object arg) {
            if ((this.updateGroupDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGroupDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBoardContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateBoardContent(string boardContentID, string boardDesc) {
            object[] results = this.Invoke("UpdateBoardContent", new object[] {
                        boardContentID,
                        boardDesc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBoardContentAsync(string boardContentID, string boardDesc) {
            this.UpdateBoardContentAsync(boardContentID, boardDesc, null);
        }
        
        /// <remarks/>
        public void UpdateBoardContentAsync(string boardContentID, string boardDesc, object userState) {
            if ((this.UpdateBoardContentOperationCompleted == null)) {
                this.UpdateBoardContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBoardContentOperationCompleted);
            }
            this.InvokeAsync("UpdateBoardContent", new object[] {
                        boardContentID,
                        boardDesc}, this.UpdateBoardContentOperationCompleted, userState);
        }
        
        private void OnUpdateBoardContentOperationCompleted(object arg) {
            if ((this.UpdateBoardContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBoardContentCompleted(this, new UpdateBoardContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveBoardContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RetrieveBoardContent(string boardContentID) {
            object[] results = this.Invoke("RetrieveBoardContent", new object[] {
                        boardContentID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveBoardContentAsync(string boardContentID) {
            this.RetrieveBoardContentAsync(boardContentID, null);
        }
        
        /// <remarks/>
        public void RetrieveBoardContentAsync(string boardContentID, object userState) {
            if ((this.RetrieveBoardContentOperationCompleted == null)) {
                this.RetrieveBoardContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveBoardContentOperationCompleted);
            }
            this.InvokeAsync("RetrieveBoardContent", new object[] {
                        boardContentID}, this.RetrieveBoardContentOperationCompleted, userState);
        }
        
        private void OnRetrieveBoardContentOperationCompleted(object arg) {
            if ((this.RetrieveBoardContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveBoardContentCompleted(this, new RetrieveBoardContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTypeID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserTypeID(string groupID) {
            object[] results = this.Invoke("GetUserTypeID", new object[] {
                        groupID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeIDAsync(string groupID) {
            this.GetUserTypeIDAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetUserTypeIDAsync(string groupID, object userState) {
            if ((this.GetUserTypeIDOperationCompleted == null)) {
                this.GetUserTypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeIDOperationCompleted);
            }
            this.InvokeAsync("GetUserTypeID", new object[] {
                        groupID}, this.GetUserTypeIDOperationCompleted, userState);
        }
        
        private void OnGetUserTypeIDOperationCompleted(object arg) {
            if ((this.GetUserTypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeIDCompleted(this, new GetUserTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupAuthorisation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetGroupAuthorisation(int userID, int groupID) {
            object[] results = this.Invoke("GetGroupAuthorisation", new object[] {
                        userID,
                        groupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupAuthorisationAsync(int userID, int groupID) {
            this.GetGroupAuthorisationAsync(userID, groupID, null);
        }
        
        /// <remarks/>
        public void GetGroupAuthorisationAsync(int userID, int groupID, object userState) {
            if ((this.GetGroupAuthorisationOperationCompleted == null)) {
                this.GetGroupAuthorisationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupAuthorisationOperationCompleted);
            }
            this.InvokeAsync("GetGroupAuthorisation", new object[] {
                        userID,
                        groupID}, this.GetGroupAuthorisationOperationCompleted, userState);
        }
        
        private void OnGetGroupAuthorisationOperationCompleted(object arg) {
            if ((this.GetGroupAuthorisationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupAuthorisationCompleted(this, new GetGroupAuthorisationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserType GetUserType(int userID, int groupID) {
            object[] results = this.Invoke("GetUserType", new object[] {
                        userID,
                        groupID});
            return ((UserType)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(int userID, int groupID) {
            this.GetUserTypeAsync(userID, groupID, null);
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(int userID, int groupID, object userState) {
            if ((this.GetUserTypeOperationCompleted == null)) {
                this.GetUserTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeOperationCompleted);
            }
            this.InvokeAsync("GetUserType", new object[] {
                        userID,
                        groupID}, this.GetUserTypeOperationCompleted, userState);
        }
        
        private void OnGetUserTypeOperationCompleted(object arg) {
            if ((this.GetUserTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeCompleted(this, new GetUserTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBoardTopics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetBoardTopics(int groupID) {
            object[] results = this.Invoke("GetBoardTopics", new object[] {
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoardTopicsAsync(int groupID) {
            this.GetBoardTopicsAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetBoardTopicsAsync(int groupID, object userState) {
            if ((this.GetBoardTopicsOperationCompleted == null)) {
                this.GetBoardTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoardTopicsOperationCompleted);
            }
            this.InvokeAsync("GetBoardTopics", new object[] {
                        groupID}, this.GetBoardTopicsOperationCompleted, userState);
        }
        
        private void OnGetBoardTopicsOperationCompleted(object arg) {
            if ((this.GetBoardTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoardTopicsCompleted(this, new GetBoardTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupOwnerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGroupOwnerDetails(int groupID) {
            object[] results = this.Invoke("GetGroupOwnerDetails", new object[] {
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupOwnerDetailsAsync(int groupID) {
            this.GetGroupOwnerDetailsAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetGroupOwnerDetailsAsync(int groupID, object userState) {
            if ((this.GetGroupOwnerDetailsOperationCompleted == null)) {
                this.GetGroupOwnerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupOwnerDetailsOperationCompleted);
            }
            this.InvokeAsync("GetGroupOwnerDetails", new object[] {
                        groupID}, this.GetGroupOwnerDetailsOperationCompleted, userState);
        }
        
        private void OnGetGroupOwnerDetailsOperationCompleted(object arg) {
            if ((this.GetGroupOwnerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupOwnerDetailsCompleted(this, new GetGroupOwnerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGroupMembers(int groupID) {
            object[] results = this.Invoke("GetGroupMembers", new object[] {
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupMembersAsync(int groupID) {
            this.GetGroupMembersAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetGroupMembersAsync(int groupID, object userState) {
            if ((this.GetGroupMembersOperationCompleted == null)) {
                this.GetGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetGroupMembers", new object[] {
                        groupID}, this.GetGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetGroupMembersOperationCompleted(object arg) {
            if ((this.GetGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupMembersCompleted(this, new GetGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupMembersByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGroupMembersByName(int groupID, string name) {
            object[] results = this.Invoke("GetGroupMembersByName", new object[] {
                        groupID,
                        name});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupMembersByNameAsync(int groupID, string name) {
            this.GetGroupMembersByNameAsync(groupID, name, null);
        }
        
        /// <remarks/>
        public void GetGroupMembersByNameAsync(int groupID, string name, object userState) {
            if ((this.GetGroupMembersByNameOperationCompleted == null)) {
                this.GetGroupMembersByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupMembersByNameOperationCompleted);
            }
            this.InvokeAsync("GetGroupMembersByName", new object[] {
                        groupID,
                        name}, this.GetGroupMembersByNameOperationCompleted, userState);
        }
        
        private void OnGetGroupMembersByNameOperationCompleted(object arg) {
            if ((this.GetGroupMembersByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupMembersByNameCompleted(this, new GetGroupMembersByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingGroupMembers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPendingGroupMembers(int groupID) {
            object[] results = this.Invoke("GetPendingGroupMembers", new object[] {
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingGroupMembersAsync(int groupID) {
            this.GetPendingGroupMembersAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetPendingGroupMembersAsync(int groupID, object userState) {
            if ((this.GetPendingGroupMembersOperationCompleted == null)) {
                this.GetPendingGroupMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingGroupMembersOperationCompleted);
            }
            this.InvokeAsync("GetPendingGroupMembers", new object[] {
                        groupID}, this.GetPendingGroupMembersOperationCompleted, userState);
        }
        
        private void OnGetPendingGroupMembersOperationCompleted(object arg) {
            if ((this.GetPendingGroupMembersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingGroupMembersCompleted(this, new GetPendingGroupMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGroupMemeber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGroupMemeber(UserGroupList userGroupList) {
            object[] results = this.Invoke("UpdateGroupMemeber", new object[] {
                        userGroupList});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupMemeberAsync(UserGroupList userGroupList) {
            this.UpdateGroupMemeberAsync(userGroupList, null);
        }
        
        /// <remarks/>
        public void UpdateGroupMemeberAsync(UserGroupList userGroupList, object userState) {
            if ((this.UpdateGroupMemeberOperationCompleted == null)) {
                this.UpdateGroupMemeberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupMemeberOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupMemeber", new object[] {
                        userGroupList}, this.UpdateGroupMemeberOperationCompleted, userState);
        }
        
        private void OnUpdateGroupMemeberOperationCompleted(object arg) {
            if ((this.UpdateGroupMemeberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupMemeberCompleted(this, new UpdateGroupMemeberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGroupMemeberStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGroupMemeberStatus(int listID, int status) {
            object[] results = this.Invoke("UpdateGroupMemeberStatus", new object[] {
                        listID,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupMemeberStatusAsync(int listID, int status) {
            this.UpdateGroupMemeberStatusAsync(listID, status, null);
        }
        
        /// <remarks/>
        public void UpdateGroupMemeberStatusAsync(int listID, int status, object userState) {
            if ((this.UpdateGroupMemeberStatusOperationCompleted == null)) {
                this.UpdateGroupMemeberStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupMemeberStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupMemeberStatus", new object[] {
                        listID,
                        status}, this.UpdateGroupMemeberStatusOperationCompleted, userState);
        }
        
        private void OnUpdateGroupMemeberStatusOperationCompleted(object arg) {
            if ((this.UpdateGroupMemeberStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupMemeberStatusCompleted(this, new UpdateGroupMemeberStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupModerator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGroupModerator(int groupID) {
            object[] results = this.Invoke("GetGroupModerator", new object[] {
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupModeratorAsync(int groupID) {
            this.GetGroupModeratorAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetGroupModeratorAsync(int groupID, object userState) {
            if ((this.GetGroupModeratorOperationCompleted == null)) {
                this.GetGroupModeratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupModeratorOperationCompleted);
            }
            this.InvokeAsync("GetGroupModerator", new object[] {
                        groupID}, this.GetGroupModeratorOperationCompleted, userState);
        }
        
        private void OnGetGroupModeratorOperationCompleted(object arg) {
            if ((this.GetGroupModeratorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupModeratorCompleted(this, new GetGroupModeratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGroupMemberType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGroupMemberType(int listID, int userType) {
            object[] results = this.Invoke("UpdateGroupMemberType", new object[] {
                        listID,
                        userType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupMemberTypeAsync(int listID, int userType) {
            this.UpdateGroupMemberTypeAsync(listID, userType, null);
        }
        
        /// <remarks/>
        public void UpdateGroupMemberTypeAsync(int listID, int userType, object userState) {
            if ((this.UpdateGroupMemberTypeOperationCompleted == null)) {
                this.UpdateGroupMemberTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupMemberTypeOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupMemberType", new object[] {
                        listID,
                        userType}, this.UpdateGroupMemberTypeOperationCompleted, userState);
        }
        
        private void OnUpdateGroupMemberTypeOperationCompleted(object arg) {
            if ((this.UpdateGroupMemberTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupMemberTypeCompleted(this, new UpdateGroupMemberTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNonMemberByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetNonMemberByName(string name, int groupID) {
            object[] results = this.Invoke("GetNonMemberByName", new object[] {
                        name,
                        groupID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonMemberByNameAsync(string name, int groupID) {
            this.GetNonMemberByNameAsync(name, groupID, null);
        }
        
        /// <remarks/>
        public void GetNonMemberByNameAsync(string name, int groupID, object userState) {
            if ((this.GetNonMemberByNameOperationCompleted == null)) {
                this.GetNonMemberByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonMemberByNameOperationCompleted);
            }
            this.InvokeAsync("GetNonMemberByName", new object[] {
                        name,
                        groupID}, this.GetNonMemberByNameOperationCompleted, userState);
        }
        
        private void OnGetNonMemberByNameOperationCompleted(object arg) {
            if ((this.GetNonMemberByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonMemberByNameCompleted(this, new GetNonMemberByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDiscussionBoardContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDiscussionBoardContent(string boardID) {
            object[] results = this.Invoke("GetDiscussionBoardContent", new object[] {
                        boardID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDiscussionBoardContentAsync(string boardID) {
            this.GetDiscussionBoardContentAsync(boardID, null);
        }
        
        /// <remarks/>
        public void GetDiscussionBoardContentAsync(string boardID, object userState) {
            if ((this.GetDiscussionBoardContentOperationCompleted == null)) {
                this.GetDiscussionBoardContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiscussionBoardContentOperationCompleted);
            }
            this.InvokeAsync("GetDiscussionBoardContent", new object[] {
                        boardID}, this.GetDiscussionBoardContentOperationCompleted, userState);
        }
        
        private void OnGetDiscussionBoardContentOperationCompleted(object arg) {
            if ((this.GetDiscussionBoardContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiscussionBoardContentCompleted(this, new GetDiscussionBoardContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGroupMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGroupMember(int groupID, int requestUserID, int userID, int status) {
            object[] results = this.Invoke("InsertGroupMember", new object[] {
                        groupID,
                        requestUserID,
                        userID,
                        status});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGroupMemberAsync(int groupID, int requestUserID, int userID, int status) {
            this.InsertGroupMemberAsync(groupID, requestUserID, userID, status, null);
        }
        
        /// <remarks/>
        public void InsertGroupMemberAsync(int groupID, int requestUserID, int userID, int status, object userState) {
            if ((this.InsertGroupMemberOperationCompleted == null)) {
                this.InsertGroupMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGroupMemberOperationCompleted);
            }
            this.InvokeAsync("InsertGroupMember", new object[] {
                        groupID,
                        requestUserID,
                        userID,
                        status}, this.InsertGroupMemberOperationCompleted, userState);
        }
        
        private void OnInsertGroupMemberOperationCompleted(object arg) {
            if ((this.InsertGroupMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGroupMemberCompleted(this, new InsertGroupMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBoardContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBoardContent(int boardID, int userID, string boardDetails, System.DateTime createdDate) {
            object[] results = this.Invoke("InsertBoardContent", new object[] {
                        boardID,
                        userID,
                        boardDetails,
                        createdDate});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBoardContentAsync(int boardID, int userID, string boardDetails, System.DateTime createdDate) {
            this.InsertBoardContentAsync(boardID, userID, boardDetails, createdDate, null);
        }
        
        /// <remarks/>
        public void InsertBoardContentAsync(int boardID, int userID, string boardDetails, System.DateTime createdDate, object userState) {
            if ((this.InsertBoardContentOperationCompleted == null)) {
                this.InsertBoardContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBoardContentOperationCompleted);
            }
            this.InvokeAsync("InsertBoardContent", new object[] {
                        boardID,
                        userID,
                        boardDetails,
                        createdDate}, this.InsertBoardContentOperationCompleted, userState);
        }
        
        private void OnInsertBoardContentOperationCompleted(object arg) {
            if ((this.InsertBoardContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBoardContentCompleted(this, new InsertBoardContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteBoardContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteBoardContent(string boardContentID) {
            object[] results = this.Invoke("DeleteBoardContent", new object[] {
                        boardContentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBoardContentAsync(string boardContentID) {
            this.DeleteBoardContentAsync(boardContentID, null);
        }
        
        /// <remarks/>
        public void DeleteBoardContentAsync(string boardContentID, object userState) {
            if ((this.DeleteBoardContentOperationCompleted == null)) {
                this.DeleteBoardContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBoardContentOperationCompleted);
            }
            this.InvokeAsync("DeleteBoardContent", new object[] {
                        boardContentID}, this.DeleteBoardContentOperationCompleted, userState);
        }
        
        private void OnDeleteBoardContentOperationCompleted(object arg) {
            if ((this.DeleteBoardContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBoardContentCompleted(this, new DeleteBoardContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Group {
        
        private int groupIDField;
        
        private string groupNameField;
        
        private int catIDField;
        
        private string groupDescField;
        
        private string groupTypeField;
        
        private System.DateTime createdDateField;
        
        private int statusField;
        
        private int fileSharingIDField;
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public int CatID {
            get {
                return this.catIDField;
            }
            set {
                this.catIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupDesc {
            get {
                return this.groupDescField;
            }
            set {
                this.groupDescField = value;
            }
        }
        
        /// <remarks/>
        public string GroupType {
            get {
                return this.groupTypeField;
            }
            set {
                this.groupTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int FileSharingID {
            get {
                return this.fileSharingIDField;
            }
            set {
                this.fileSharingIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserGroupList {
        
        private int listIDField;
        
        private int groupIDField;
        
        private int statusField;
        
        private int userIDField;
        
        private int userTypeIDField;
        
        private int requestUserIDField;
        
        private System.DateTime joinDateField;
        
        /// <remarks/>
        public int ListID {
            get {
                return this.listIDField;
            }
            set {
                this.listIDField = value;
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserTypeID {
            get {
                return this.userTypeIDField;
            }
            set {
                this.userTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int RequestUserID {
            get {
                return this.requestUserIDField;
            }
            set {
                this.requestUserIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime JoinDate {
            get {
                return this.joinDateField;
            }
            set {
                this.joinDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserType {
        
        private int typeIDField;
        
        private string typeNameField;
        
        private string typeDescField;
        
        private int readField;
        
        private int writeField;
        
        private int editField;
        
        private int deleteField;
        
        /// <remarks/>
        public int TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeDesc {
            get {
                return this.typeDescField;
            }
            set {
                this.typeDescField = value;
            }
        }
        
        /// <remarks/>
        public int Read {
            get {
                return this.readField;
            }
            set {
                this.readField = value;
            }
        }
        
        /// <remarks/>
        public int Write {
            get {
                return this.writeField;
            }
            set {
                this.writeField = value;
            }
        }
        
        /// <remarks/>
        public int Edit {
            get {
                return this.editField;
            }
            set {
                this.editField = value;
            }
        }
        
        /// <remarks/>
        public int Delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateGroupDefaultCatCompletedEventHandler(object sender, CreateGroupDefaultCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupDefaultCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupDefaultCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateNewGroupTopicCompletedEventHandler(object sender, CreateNewGroupTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewGroupTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewGroupTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateGroupNewCatCompletedEventHandler(object sender, CreateGroupNewCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupNewCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupNewCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UserGroupOwnerCompletedEventHandler(object sender, UserGroupOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UserGroupMemberCompletedEventHandler(object sender, UserGroupMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupDetailsCompletedEventHandler(object sender, GetGroupDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCatDetailsCompletedEventHandler(object sender, GetCatDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCatDetailsByIDCompletedEventHandler(object sender, GetCatDetailsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatDetailsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatDetailsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteUserFromGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateGroupDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateBoardContentCompletedEventHandler(object sender, UpdateBoardContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBoardContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBoardContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RetrieveBoardContentCompletedEventHandler(object sender, RetrieveBoardContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveBoardContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveBoardContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserTypeIDCompletedEventHandler(object sender, GetUserTypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupAuthorisationCompletedEventHandler(object sender, GetGroupAuthorisationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupAuthorisationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupAuthorisationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetUserTypeCompletedEventHandler(object sender, GetUserTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBoardTopicsCompletedEventHandler(object sender, GetBoardTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoardTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoardTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupOwnerDetailsCompletedEventHandler(object sender, GetGroupOwnerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupOwnerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupOwnerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupMembersCompletedEventHandler(object sender, GetGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupMembersByNameCompletedEventHandler(object sender, GetGroupMembersByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupMembersByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupMembersByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetPendingGroupMembersCompletedEventHandler(object sender, GetPendingGroupMembersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingGroupMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingGroupMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateGroupMemeberCompletedEventHandler(object sender, UpdateGroupMemeberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupMemeberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupMemeberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateGroupMemeberStatusCompletedEventHandler(object sender, UpdateGroupMemeberStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupMemeberStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupMemeberStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetGroupModeratorCompletedEventHandler(object sender, GetGroupModeratorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupModeratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupModeratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateGroupMemberTypeCompletedEventHandler(object sender, UpdateGroupMemberTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupMemberTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupMemberTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetNonMemberByNameCompletedEventHandler(object sender, GetNonMemberByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonMemberByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonMemberByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDiscussionBoardContentCompletedEventHandler(object sender, GetDiscussionBoardContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiscussionBoardContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiscussionBoardContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertGroupMemberCompletedEventHandler(object sender, InsertGroupMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGroupMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGroupMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertBoardContentCompletedEventHandler(object sender, InsertBoardContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBoardContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBoardContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteBoardContentCompletedEventHandler(object sender, DeleteBoardContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBoardContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBoardContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591